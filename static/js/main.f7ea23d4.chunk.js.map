{"version":3,"sources":["App.js","actions/index.js","reducers/index.js","index.js"],"names":["App","props","handleAdd","e","store","dispatch","handleChange","currentTarget","value","handleRemove","target","getAttribute","this","getState","table","arr","map","val","i","key","className","onClick","name","text","onChange","Component","initialState","createStore","state","action","type","push","Object","assign","filter","render","ReactDOM","document","getElementById","subscribe"],"mappings":"0PAoDeA,G,wDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,UAAY,SAACC,GACX,EAAKC,MAAMC,SCXJ,CACH,KAAQ,SDEK,EAWnBC,aAAe,SAACH,GACd,EAAKC,MAAMC,SCVJ,CACH,KAAQ,OACR,KDQqBF,EAAEI,cAAcC,SAZxB,EAcnBC,aAAe,SAACN,GACd,EAAKC,MAAMC,SCPJ,CACH,KAAQ,SACR,KDKuBF,EAAEO,OAAOC,aAAa,WAbjD,EAAKP,MAAQ,EAAKH,MAAMG,MACxB,EAAKA,MAAMC,SCWJ,CACH,KAAQ,YDfK,E,qDAiBT,IAAD,OAEP,GAAIO,KAAKR,MAAMS,WACb,IAAIC,EAAQF,KAAKR,MAAMS,WAAWE,IAAIC,KAAI,SAACC,EAAKC,GAC9C,OAGE,wBAAIC,IAAKD,GACP,4BAAKA,EAAI,GACT,4BAAKD,GACL,4BAAI,4BAAQG,UAAU,aAAaC,QAAS,EAAKZ,aAAca,KAAMJ,GAAjE,eAKZ,OACE,yBAAKE,UAAU,aACb,uDACA,2BAAOZ,MAAOI,KAAKR,MAAMS,WAAWU,KAAMC,SAAUZ,KAAKN,eACzD,4BAAQc,UAAU,cAAcC,QAAST,KAAKV,WAA9C,YACA,6BACA,2BAAOkB,UAAU,SACf,+BAAO,4BAAI,qCAAc,2CAAoB,wCAC7C,+BAAQN,S,GAzCAW,c,OEHZC,EAAe,CACjBX,IAAK,GACLQ,KAAM,ICINnB,EAAQuB,aDFG,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC7C,OAAQA,EAAOC,MACX,IAAK,MAID,OAFAF,EAAMb,IAAIgB,KAAKH,EAAML,MACrBK,EAAML,KAAO,GACNS,OAAOC,OAAO,GAAIL,GAC7B,IAAK,OAGD,OADAA,EAAML,KAAOM,EAAON,KACbS,OAAOC,OAAO,GAAIL,GAC7B,IAAK,SAUD,OARAA,EAAMb,IAAMa,EAAMb,IAAImB,QAAO,SAACjB,EAAKC,GAE/B,OAAIA,GAAKW,EAAOP,QAMbU,OAAOC,OAAO,GAAIL,GAC7B,IAAK,UACD,OAAOI,OAAOC,OAAO,GAAIL,OCpBrC,SAASO,IACPC,IAASD,OACP,kBAAC,EAAD,CAAK/B,MAAOA,IACZiC,SAASC,eAAe,SAG5BlC,EAAMmC,UAAUJ,GAChBA,M","file":"static/js/main.f7ea23d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { ADD, TYPE, DELETE, INITIAL } from './actions';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.store = this.props.store;\n    this.store.dispatch(INITIAL())\n    // console.log(this.store.getState())\n\n  }\n  handleAdd = (e) => {\n    this.store.dispatch(ADD());\n    // console.log(this.store.getState())\n  }\n  handleChange = (e) => {\n    this.store.dispatch(TYPE(e.currentTarget.value));\n  }\n  handleRemove = (e) => {\n    this.store.dispatch(DELETE(e.target.getAttribute('name')));\n  }\n  render() {\n\n    if (this.store.getState()) {\n      var table = this.store.getState().arr.map((val, i) => {\n        return (\n\n\n          <tr key={i}>\n            <td>{i + 1}</td>\n            <td>{val}</td>\n            <td><button className='btn-danger' onClick={this.handleRemove} name={i}>Remove</button></td>\n          </tr>\n        )\n      })\n    }\n    return (\n      <div className='container'>\n        <h1>Welcome to Task Manager</h1>\n        <input value={this.store.getState().text} onChange={this.handleChange}></input>\n        <button className='btn-primary' onClick={this.handleAdd}>Add Task</button>\n        <br></br>\n        <table className='table'>\n          <thead><tr><th>S. No</th><th>Description</th><th>Remove</th></tr></thead>\n          <tbody>{table}</tbody>\n        </table>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","export const ADD = (text) => {\r\n    return {\r\n        'type': 'Add'\r\n    }\r\n}\r\nexport const TYPE = (text) => {\r\n    return {\r\n        'type': 'type',\r\n        'text': text\r\n    }\r\n}\r\nexport const DELETE = (name) => {\r\n    return {\r\n        'type': 'Delete',\r\n        'name': name\r\n    }\r\n}\r\nexport const INITIAL = () => {\r\n    return {\r\n        'type': 'Initial'\r\n    }\r\n}\r\n","const initialState = {\r\n    arr: [],\r\n    text: ''\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Add':\r\n\r\n            state.arr.push(state.text)\r\n            state.text = \"\"\r\n            return Object.assign({}, state)\r\n        case 'type':\r\n            // console.log(action.text)\r\n            state.text = action.text\r\n            return Object.assign({}, state)\r\n        case 'Delete':\r\n            // console.log(action.name)\r\n            state.arr = state.arr.filter((val, i) => {\r\n                // console.log(i)\r\n                if (i == action.name)\r\n                    return false;\r\n                return true;\r\n\r\n            })\r\n            // console.log(state.arr)\r\n            return Object.assign({}, state);\r\n        case 'Initial':\r\n            return Object.assign({}, state)\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport state from './reducers';\nlet store = createStore(state);\nfunction render() {\n  ReactDOM.render(\n    <App store={store} />,\n    document.getElementById('root')\n  );\n}\nstore.subscribe(render);\nrender();\n\n"],"sourceRoot":""}